#!/usr/bin/python
# this script starts the thing that does the thing
#
# comments starting with a capital letter are important ones
#
# requires python-paramiko

# Our "clever" functions start here

image_baseimage = "debian-jessie-baseimage.qcow2"
image_tempimage = "temp.qcow2"

# Make a copy of the base image
def copy_base_image():
    import os, shutil

    # check the base image exists
    if not os.path.exists(image_baseimage):
        print("ERROR: cannot find base image " + image_baseimage)
        exit(0)

    # delete the temp file if it exists
    if os.path.exists(image_tempimage):
        os.remove(image_tempimage)

    # copy the base image to a temp image
    shutil.copyfile(image_baseimage, image_tempimage)

def remove_temp_image():
    import os

    if os.path.exists(image_tempimage):
        os.remove(image_tempimage)

# Start the qemu session
def start_builder_vm():
    import shlex, subprocess

    # qemu-system-x86_64 -hda debian-jessie-baseimage.qcow2 -boot d -m 256 -net user,hostfwd=tcp::8162-:22 -net nic
    command_line = "qemu-system-x86_64 -hda " + image_tempimage + " -boot d -m 256 -net user,hostfwd=tcp::8162-:22 -net nic"
    args = shlex.split(command_line)

    proc = subprocess.Popen(args)


import superclouder.superclouder
client = superclouder.superclouder.Client(hostname='127.0.0.1', port=8162, username='root', password='pass')

# Wait for the vm to be ready, or quit if it takes too long to start
def wait_builder_vm():
    import time

    while not client.connect():
        time.sleep(5)

def do_the_thing():
    # copy the script
    client.copy_file_sftp("pifactory", "/root/pifactory")

    client.exec_command("chmod +x /root/pifactory")

    stdout, stderr, retcode = client.exec_command("/root/pifactory")

    print("OUT")
    print(stdout)
    print("ERR")
    print(stderr)
    print("RETCODE")
    print(retcode)

    # shutdown the client.
    client.exec_command("/sbin/shutdown now")

    # todo: wait to shutdown cleanly before killing !

    # finish up
    client.close()


#copy_base_image() # we don't need to do this for testing, takes too long
start_builder_vm()
wait_builder_vm()
do_the_thing()
#remove_temp_image()